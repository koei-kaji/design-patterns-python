name: Periodic safety check

on:
  schedule:
    - cron: "0 0 1 * *"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/check-safety.yaml"
  push:
    branches:
      - main
    paths:
      - "**"
      - "!*.md"

jobs:
  check-code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9.11]
    env:
      WORKDIR: ./
      PIP_VERSION: 21.2.4
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Check Safety with safety
        id: check-safety-with-safety
        working-directory: ${{ env.WORKDIR }}
        run: |
          make safety-check
